name: gamest
services:
  game-server:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
    ports:
      - "2567:2567"
    depends_on:
      redis:
        condition: service_started
      nats:
        condition: service_started
    volumes:
      - ./logs:/app/logs
      - ${SSL_CERT_PATH}:/etc/ssl/certs/gamest.pem
      - ${SSL_KEY_PATH}:/etc/ssl/private/gamest.key
    environment:
      NODE_ENV: ${NODE_ENV}
      NATS_URL: ${NATS_URL}
      SSL_CERT_PATH: /etc/ssl/certs/gamest.pem
      SSL_KEY_PATH: /etc/ssl/private/gamest.key
    networks:
      - gamest-network

  redis:
    image: "redis:latest"
    ports:
      - "6379:6379"
    networks:
      - gamest-network

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - gamest-network
    restart: unless-stopped

  redis-exporter:
    image: oliver006/redis_exporter:latest
    ports:
      - "9121:9121"
    environment:
      REDIS_ADDR: ${REDIS_URL}
    depends_on:
      redis:
        condition: service_started
    networks:
      - gamest-network
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/etc/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      prometheus:
        condition: service_started
      loki:
        condition: service_started
    networks:
      - gamest-network

  loki:
    image: grafana/loki:latest
    ports:
      - "3101:3100"
    volumes:
      - ./loki/config.yml:/etc/loki/config.yml
      - loki-data:/loki
    command: -config.file=/etc/loki/config.yml
    networks:
      - gamest-network

  promtail:
    image: grafana/promtail:latest
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./promtail/config.yml:/etc/promtail/config.yml
    command:
      - -config.file=/etc/promtail/config.yml
      - -client.url=${LOKI_URL}/loki/api/v1/push
    depends_on:
      - loki
    networks:
      - gamest-network

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./dist:/usr/share/nginx/html
    depends_on:
      game-server:
        condition: service_started
    restart: unless-stopped
    networks:
      - gamest-network
  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    ports:
      - "9113:9113"
    command:
      - -nginx.scrape-uri=http://nginx:80/stub_status
    networks:
      - gamest-network
  nats:
    image: nats:latest
    ports:
      - "4222:4222"
      - "8222:8222"
    command: "--jetstream --http_port 8222"
    networks:
      - gamest-network
    restart: unless-stopped
  nats-exporter:
    image: natsio/prometheus-nats-exporter:latest
    ports:
      - "7777:7777"  # Порт для экспорта метрик (можно выбрать любой)
    command:
    - "--varz"
    - "--connz"
    - "--healthz"
    - "http://nats:8222"
    depends_on:
      - nats
    networks:
      - gamest-network
    restart: unless-stopped
  node-exporter:
    image: prom/node-exporter:latest
    container_name: gamest-node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"  # Маппинг порта 9100 для доступа с хоста
    volumes:
      - /proc:/host/proc:ro  # Монтируем /proc для сбора метрик
      - /sys:/host/sys:ro    # Монтируем /sys для сбора метрик
      - /:/rootfs:ro         # Монтируем корневую файловую систему (только для чтения)
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($|/)'
    networks:
      - gamest-network

networks:
  gamest-network:
    driver: bridge
volumes:
  grafana-storage: {}
  prometheus-data: {}
  loki-data: {}